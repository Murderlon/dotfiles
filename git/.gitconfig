[user]
  name = Murderlon
  email = merlijn@soverin.net
  signingkey = 1FF861FF1DDBB953

[alias]
  a = add
  b = branch
  c = commit
  cm = commit -m
  co = checkout
  d = diff
  f = fetch
  i = init
  m = merge
  s = status
  p = push
  l = log --pretty=oneline --graph --abbrev-commit
  # Show most recently worked on branches
  recent = "!git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format='%(refname:short)' | fzf | xargs git checkout"
  # Create a fixup commit linked to another commit
  fixup = "!git log -n 20 --pretty=format:'%h %s' --no-merges | fzf | cut -c -7 | xargs -o git commit --fixup"
  # Show all commmits which have not been released yet (commits since the last tag)
  unreleased = "!git log --pretty=oneline --graph --abbrev-commit $(git describe --tags --abbrev=0 @^)..@"
  # Delete all local branches which no longer have a remote
  cleanbranches = "!git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done"

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[core]
  editor = 'nvim'
  autocrlf = input  # keep newlines as in input
  compression = 9  # trade cpu for network
  fsync = none
  whitespace = error  # threat incorrect whitespace as errors
  preloadindex = true  # preload index for faster status
	ignorecase = false

[advice]  # disable advices
  addEmptyPathspec = false
  pushNonFastForward = false
  statusHints = false

[blame]
  coloring = highlightRecent
  date = relative

[status]
  branch = true
  short = true
  showStash = true
  showUntrackedFiles = all  # show individual untracked files

[commit]
  gpgsign = true

[diff]
  context = 3  # less context in diffs
  renames = copies  # detect copies as renames in diffs
  interHunkContext = 10  # merge near hunks in diffs

[help]
  # Automatically correct and execute mistyped commands
  autocorrect = 1

[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true

[push]
  # https://git-scm.com/docs/git-config#git-config-pushdefault
  default = current
  # Do not push tags on push without explicit --tags
  followTags = false

[pull]
  rebase = true

[init]
  defaultBranch = main

[rerere]
  enabled = true

[branch]
	sort = -committerdate

[rebase]
	updateRefs = true
  autoSquash = true

[log]
  abbrevCommit = true  # short commits
  graphColors = blue,yellow,cyan,magenta,green,red

# Colors
[color "blame"]
  highlightRecent = black bold,1 year ago,white,1 month ago,default,7 days ago,blue

[color "branch"]
  current  = magenta
  local    = default
  remote   = yellow
  upstream = green
  plain    = blue

[color.decorate]
  HEAD = red
  branch = blue
  tag = yellow
  remoteBranch = magenta
